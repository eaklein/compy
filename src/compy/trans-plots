#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu May 19 15:30:54 2022

@author: diesel
"""

import os
import numpy as np
import matplotlib.pyplot as plt
from compy import compy_script
from scipy.stats import gaussian_kde
from scipy.signal import savgol_filter

os.chdir("/mnt/c/Users/Avram/Dropbox (MIT)/MIT/research/NRTA/experiments/")
runs = compy_script.main()
runs_ob = compy_script.main()

keys = ['20220518-DU-1-merged',
        '20220518-DU-3',
        '20220518-DU-5',
        '20220518-DU-7',
        '20220518-DU-9',
        '20220518-DU-11']

dict_trans = {}

key_ob = '20220517-DU-0mm-merged'
runs_ob[key_ob].t_meas = 10
data_ob = runs_ob[key_ob].data['filtered']['CH0']
hist_ob, bin_edges = np.histogram(data_ob.TOF, range=[0, 192], bins=512)
bin_centers = bin_edges[1:] + (bin_edges[1] - bin_edges[0])/2
hist_ob = hist_ob/runs_ob[key_ob].t_meas
hist_ob_filt = savgol_filter(hist_ob, 25, 1)

plt.figure()
plt.plot(bin_centers, hist_ob)
plt.plot(bin_centers, savgol_filter(hist_ob, 25, 1))
plt.ylim(0, 20)

for key in keys:
    data = runs[key].data['filtered']['CH0']
    hist, bin_edges = np.histogram(data.TOF, range=[0, 192], bins=512)
    hist = hist/runs[key].t_meas
    trans = [x/y if y != 0 else 0 for x, y in zip(hist, hist_ob_filt)]
    dict_trans[key] = trans
    plt.figure(figsize=(16, 9))
    trans_kde = gaussian_kde(data.TOF, bw_method=0.0025)
    plt.plot(bin_edges[1:], trans, drawstyle='steps-mid', lw=2, color='black',
             label=key)
    plt.xlim(20, 192)
    plt.ylim(0, 1.25)
    plt.legend(loc='lower right')
